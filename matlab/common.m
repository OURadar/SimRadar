quat_mult = @(left, right) ...
      [left(4) * right(1) - left(3) * right(2) + left(2) * right(3) + left(1) * right(4), ...
       left(4) * right(2) + left(3) * right(1) + left(2) * right(4) - left(1) * right(3), ...
       left(4) * right(3) + left(3) * right(4) - left(2) * right(1) + left(1) * right(2), ...
       left(4) * right(4) - left(3) * right(3) - left(2) * right(2) - left(1) * right(1)];

quat_conj = @(x) [-x(1:3) x(4)];

quat_rotx_make = @(x) [sin(0.5 * x) 0 0 cos(0.5 * x)];
quat_roty_make = @(x) [0 sin(0.5 * x) 0 cos(0.5 * x)];
quat_rotz_make = @(x) [0 0 sin(0.5 * x) cos(0.5 * x)];

quat_rotate = @(x, q) quat_mult(quat_mult(q, x), quat_conj(q));

tfmat_rotz_make = @(x) [cos(x) -sin(x) 0 0; sin(x) cos(x) 0 0; 0 0 1 0; 0 0 0 1];
tfmat_roty_make = @(x) [cos(x) 0 sin(x) 0; 0 1 0 0; -sin(x) 0 cos(x) 0; 0 0 0 1];
tfmat_rotx_make = @(x) [1 0 0 0; 0 cos(x) -sin(x) 0; 0 sin(x) cos(x) 0; 0 0 0 1];

quat_mult_struct = @(left, right) ...
                   [left.w * right.x - left.z * right.y + left.y * right.z + left.x * right.w, ...
                    left.w * right.y + left.z * right.x + left.y * right.w - left.x * right.z, ...
                    left.w * right.z + left.z * right.w - left.y * right.x + left.x * right.y, ...
                    left.w * right.w - left.z * right.z - left.y * right.y - left.x * right.x];

% quat2abg = @(q) deal(atan2(q(2) * q(3) + q(4) * q(1) , q(4) * q(2) - q(1) * q(3)), ...
%                       acos(q(4) * q(4) + q(3) * q(3) - q(2) * q(2) - q(1) * q(1)), ...
%                      atan2(q(2) * q(3) - q(4) * q(1) , q(1) * q(3) + q(4) * q(2)));

r323quat = @(alpha, beta, gamma) quat_mult(quat_mult(quat_rotz_make(alpha), quat_roty_make(beta)), quat_rotz_make(gamma));
